# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- '*'

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  jobs:
  - job: BuildJob
    displayName: 'Build and Package'
    steps:
    - task: CopyFiles@2
      inputs:
        targetFolder: '$(Build.ArtifactStagingDirectory)/drop'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/drop'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/drop.zip'
    - publish: $(Build.ArtifactStagingDirectory)/drop.zip
      artifact: drop # Publish the ZIP archive as an artifact

- stage: Test
  jobs:
  - job: TestJob
    displayName: 'Run Python Tests'
    steps:
    - script: |
        pip install pytest pytest-cov flask mysql-connector
        pip install pymysql
        pip install HTMLTestRunner-Python3
      displayName: 'Install modules'
    - script: |
        cd $(Build.Repository.LocalPath)
        python -m pytest -v $(Build.Repository.LocalPath)/*test.py --cov=my_module --junitxml=test-unit.xml
      displayName: 'Run Unit Tests'
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'test-unit.xml'
      condition: always()

- stage: 'Deploy'
  displayName: 'Deploy the web application'
  dependsOn: Build
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    environment: dev
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: AzureWebApp@1
            displayName: 'Azure App Service Deploy: website'
            inputs:
              azureSubscription: 'Property Management System'
              appName: '$(webAppName)'
              package: '$(Pipeline.Workspace)/drop.zip' # Deploy the ZIP archive
